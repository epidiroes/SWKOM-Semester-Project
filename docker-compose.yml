version: '3.8'
services:
  db:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=paperless
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      custom_net:
        ipv4_address: 10.5.0.50

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      custom_net:
        ipv4_address: 10.5.0.3
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      RABBITMQ_DEFAULT_USER: paperless
      RABBITMQ_DEFAULT_PASS: paperless

  app:
    build:
      context: .
    ports:
      - "8081:8080"
    volumes:
      - ./RestUI/src:/app/src
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
    restart: on-failure
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/paperless
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_PROFILES_ACTIVE: docker
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: paperless
      SPRING_RABBITMQ_PASSWORD: paperless
      JAVA_OPTS: -Xmx512m
    networks:
      custom_net:
        ipv4_address: 10.5.0.5

  nginx:
    image: nginx:1-alpine
    ports:
      - "5000:80"
    volumes:
      - ./RestUI/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      app:
        condition: service_started
    networks:
      custom_net:
        ipv4_address: 10.5.0.2

networks:
  custom_net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1

volumes:
  postgres_data:
